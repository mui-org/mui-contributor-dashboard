nodes:
  9q8eshxx:
    name: Application
    attributes: {}
    id: 9q8eshxx
    type: app
    parentId: null
    parentProp: null
    parentIndex: null
  9r8fshsf:
    name: communityMetrics_core
    attributes:
      title:
        type: const
        value: Page 1
    id: 9r8fshsf
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a0
  3u63h0h:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 3u63h0h
    type: element
    parentId: 9r8fshsf
    parentProp: children
    parentIndex: a0
  kn53hyv:
    name: DataGrid
    props:
      rows:
        type: jsExpression
        value: >
          PRsOpenandReviewedQuery.data.map((item) => ({
            ...item, // use the spread operator to copy existing properties
            ratio: Math.round((item.reviewed * 100) / item.opened) / 100, // add a new property to each object
          }))
      columns:
        type: const
        value:
          - field: event_month
            type: string
            width: 105
          - field: reviewed_by
            type: string
            width: 165
          - field: reviewed
            type: number
            width: 138
          - field: opened
            type: number
            width: 151
          - field: ratio
            type: number
            width: 141
      rowIdField:
        type: const
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: kn53hyv
    type: element
    parentId: 3u63h0h
    parentProp: children
    parentIndex: a0
  bh03hv4:
    attributes:
      query:
        type: const
        value:
          function: PRsOpenandReviewedQuery
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: PRsOpenandReviewedQuery
    id: bh03hv4
    type: query
    parentId: 9r8fshsf
    parentProp: queries
    parentIndex: a2
  6633hyv:
    name: PageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 6633hyv
    type: element
    parentId: 9r8fshsf
    parentProp: children
    parentIndex: a2
  0823hac:
    name: codeComponent_Chart
    props:
      data:
        type: jsExpression
        value: |
          PRsOpenandReviewedQuery.data
    attributes:
      component:
        type: const
        value: codeComponent.Chart
    layout: {}
    id: 0823hac
    type: element
    parentId: 6633hyv
    parentProp: children
    parentIndex: a0
  lo33hck:
    name: headCISuccessRate
    attributes:
      title:
        type: const
        value: Page2
      parameters:
        type: const
        value:
          - - repository
            - mui-x
      display:
        type: const
        value: standalone
    id: lo33hck
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a1
  og53hlk:
    attributes:
      query:
        type: const
        value:
          function: queryCommitStatuses
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: queryCommitStatuses
    id: og53hlk
    type: query
    parentId: lo33hck
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  jqf3hsr:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: jqf3hsr
    type: element
    parentId: lo33hck
    parentProp: children
    parentIndex: a0
  uqe3h5c:
    name: codeComponent_HealthBadge
    props:
      warning:
        type: const
        value: 75
      problem:
        type: const
        value: 50
      value:
        type: jsExpression
        value: >
          Math.round(
            (queryCommitStatuses.data.repository.defaultBranchRef.target.history.nodes.filter(
              (commit) =>
                commit.status &&
                (commit.status.state === "SUCCESS" || commit.status.state === "PENDING")
            ).length /
              queryCommitStatuses.data.repository.defaultBranchRef.target.history.nodes
                .length) *
              100
          )
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: uqe3h5c
    type: element
    parentId: jqf3hsr
    parentProp: children
    parentIndex: a0
  sgp3hzb:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: sgp3hzb
    type: element
    parentId: lo33hck
    parentProp: children
    parentIndex: a1
  9uo3hez:
    name: Text
    props:
      value:
        type: jsExpression
        value: >
          `Based on the last 7 days
          (${queryCommitStatuses.data.repository.defaultBranchRef.target.history.nodes.length}
          commits)`
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 9uo3hez
    type: element
    parentId: sgp3hzb
    parentProp: children
    parentIndex: a0
  8n03iat:
    name: overdueRatio
    attributes:
      title:
        type: const
        value: overdueRatio
      display:
        type: const
        value: standalone
    id: 8n03iat
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a2
  1t13irl:
    attributes:
      query:
        type: const
        value:
          function: getRatio
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: getRatio
    id: 1t13irl
    type: query
    parentId: 8n03iat
    parentProp: queries
    parentIndex: a0
  e333iuo:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: e333iuo
    type: element
    parentId: 8n03iat
    parentProp: children
    parentIndex: a0
  y623ild:
    name: codeComponent_HealthBadge
    props:
      warning:
        type: const
        value: 10
      problem:
        type: const
        value: 15
      lowerIsBetter:
        type: const
        value: true
      value:
        type: jsExpression
        value: |
          Math.round(getRatio.data.ratio * 10000) / 100
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: y623ild
    type: element
    parentId: e333iuo
    parentProp: children
    parentIndex: a0
  jb63icx:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: jb63icx
    type: element
    parentId: 8n03iat
    parentProp: children
    parentIndex: a1
  rg53iur:
    name: Text
    props:
      value:
        type: const
        value: Based on last 30 days invoices
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: rg53iur
    type: element
    parentId: jb63icx
    parentProp: children
    parentIndex: a0
  fn03hvq:
    name: cICompletionTime
    attributes:
      title:
        type: const
        value: cICompletionTime
      parameters:
        type: const
        value:
          - - repository
            - mui-x
      display:
        type: const
        value: standalone
    id: fn03hvq
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a3
  ii53hyb:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: jsExpression
            value: >
              `https://circleci.com/api/v2/insights/github/mui/${parameters.repository}/workflows/pipeline/summary?analytics-segmentation=web-ui-insights&reporting-window=last-7-days&workflow-name=pipeline`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: queryInsights
    id: ii53hyb
    type: query
    parentId: fn03hvq
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  3x93hxi:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 3x93hxi
    type: element
    parentId: fn03hvq
    parentProp: children
    parentIndex: a0
  ey83hg3:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: >
          Math.round((queryInsights.data.metrics.duration_metrics.median / 60) *
          100) /
            100
      warning:
        type: const
        value: 15
      problem:
        type: const
        value: 20
      unit:
        type: const
        value: minutes
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: ey83hg3
    type: element
    parentId: 3x93hxi
    parentProp: children
    parentIndex: a0
  a3b3h3f:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: a3b3h3f
    type: element
    parentId: fn03hvq
    parentProp: children
    parentIndex: a1
  taa3hus:
    name: Text
    props:
      value:
        type: jsExpression
        value: >
          `Based on the last 7 days (${queryInsights.data.metrics.total_runs}
          runs)`
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: taa3hus
    type: element
    parentId: a3b3h3f
    parentProp: children
    parentIndex: a0
  bse3h9c:
    name: missingGitHubLabel
    attributes:
      title:
        type: const
        value: page
      display:
        type: const
        value: standalone
    id: bse3h9c
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a4
  38f3h2q:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/search/issues
          searchParams:
            - - q
              - type: const
                value: no:label is:open org:mui
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: queryNoLabels
    id: 38f3h2q
    type: query
    parentId: bse3h9c
    parentProp: queries
    parentIndex: a0
  srh3hct:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: srh3hct
    type: element
    parentId: bse3h9c
    parentProp: children
    parentIndex: a0
  9lg3htp:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: |
          queryNoLabels.data.items.length
      warning:
        type: const
        value: 10
      problem:
        type: const
        value: 20
      unit:
        type: const
        value: " issues or PRs"
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: 9lg3htp
    type: element
    parentId: srh3hct
    parentProp: children
    parentIndex: a0
  39j3h6b:
    name: openPRs
    attributes:
      title:
        type: const
        value: openPRs
      parameters:
        type: const
        value:
          - - repository
            - material-ui
      display:
        type: const
        value: standalone
    id: 39j3h6b
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a5
  dlm3hqd:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/search/issues
          searchParams:
            - - q
              - type: jsExpression
                value: |
                  `is:pull-request is:open repo:mui/${parameters.repository}`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: openPRs
    id: dlm3hqd
    type: query
    parentId: 39j3h6b
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  fyq3hur:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: fyq3hur
    type: element
    parentId: 39j3h6b
    parentProp: children
    parentIndex: a0
  xup3hw6:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: |
          openPRs.data.total_count
      unit:
        type: const
        value: " open PRs"
      warning:
        type: const
        value: 50
      problem:
        type: const
        value: 75
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: xup3hw6
    type: element
    parentId: fyq3hur
    parentProp: children
    parentIndex: a0
  9ou3hb2:
    name: medianTimeToCompletion
    attributes:
      title:
        type: const
        value: page
      parameters:
        type: const
        value:
          - - repoId
            - "23083156"
      display:
        type: const
        value: standalone
    id: 9ou3hb2
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a6
  4jx3hv9:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: jsExpression
            value: >
              `https://api.ossinsight.io/q/analyze-pull-request-open-to-merged?repoId=${parameters.repoId}`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: pullRequestOpenToMerged
    id: 4jx3hv9
    type: query
    parentId: 9ou3hb2
    parentProp: queries
    parentIndex: a0
    params:
      - - repoId
        - type: jsExpression
          value: |
            page.parameters.repoId
  e8113hoz:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: e8113hoz
    type: element
    parentId: 9ou3hb2
    parentProp: children
    parentIndex: a0
  xv103hin:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: >
          (() => {
            const length = pullRequestOpenToMerged.data.data.length

            return (
              Math.round((pullRequestOpenToMerged.data.data[length - 1].p75 / 24) * 100) /
              100
            )
          })()
      warning:
        type: const
        value: 3
      problem:
        type: const
        value: 0
      unit:
        type: const
        value: days
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: xv103hin
    type: element
    parentId: e8113hoz
    parentProp: children
    parentIndex: a0
  fx133hja:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: fx133hja
    type: element
    parentId: 9ou3hb2
    parentProp: children
    parentIndex: a1
  34123hhe:
    name: Text
    props:
      value:
        type: jsExpression
        value: |
          (() => {
            const length = pullRequestOpenToMerged.data.data.length

            return `Based on the last 30 days (${
              pullRequestOpenToMerged.data.data[length - 1].event_month
            })`
          })()
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 34123hhe
    type: element
    parentId: fx133hja
    parentProp: children
    parentIndex: a0
  fo163htb:
    name: issueFirstComment
    attributes:
      title:
        type: const
        value: issueFirstComment
      parameters:
        type: const
        value:
          - - repoId
            - "23083156"
      display:
        type: const
        value: standalone
    id: fo163htb
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a7
  u3173h6i:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: jsExpression
            value: >
              `https://api.ossinsight.io/q/analyze-issue-open-to-first-responded?repoId=${parameters.repoId}`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: issueOpenToFirstResponded
    id: u3173h6i
    type: query
    parentId: fo163htb
    parentProp: queries
    parentIndex: a0
    params:
      - - repoId
        - type: jsExpression
          value: |
            page.parameters.repoId
  031b3h1p:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 031b3h1p
    type: element
    parentId: fo163htb
    parentProp: children
    parentIndex: a0
  pr1a3h46:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: >
          (() => {
            const length = issueOpenToFirstResponded.data.data.length

            return Math.round(issueOpenToFirstResponded.data.data[length - 1].p75)
          })()
      warning:
        type: const
        value: 8
      problem:
        type: const
        value: 24
      unit:
        type: const
        value: " hours"
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: pr1a3h46
    type: element
    parentId: 031b3h1p
    parentProp: children
    parentIndex: a0
  h01d3hsd:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: h01d3hsd
    type: element
    parentId: fo163htb
    parentProp: children
    parentIndex: a1
  6y1c3h9v:
    name: Text
    props:
      value:
        type: jsExpression
        value: |
          (() => {
            const length = issueOpenToFirstResponded.data.data.length

            return `Based on the last 30 days (since ${
              issueOpenToFirstResponded.data.data[length - 1].event_month
            })`
          })()
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 6y1c3h9v
    type: element
    parentId: h01d3hsd
    parentProp: children
    parentIndex: a0
  hj1i3hqe:
    name: needTriage
    attributes:
      title:
        type: const
        value: needTriage
      parameters:
        type: const
        value:
          - - repository
            - material-ui
      display:
        type: const
        value: standalone
    id: hj1i3hqe
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a8
  p91j3h86:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/search/issues
          searchParams:
            - - q
              - type: jsExpression
                value: >
                  `is:issue is:open repo:mui/${parameters.repository} label:"status: needs
                  triage" `
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: needTriage
    id: p91j3h86
    type: query
    parentId: hj1i3hqe
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  wb1p3h6g:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: wb1p3h6g
    type: element
    parentId: hj1i3hqe
    parentProp: children
    parentIndex: a0
  hg1o3h4x:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: |
          needTriage.data.total_count
      warning:
        type: const
        value: 25
      problem:
        type: const
        value: 50
      unit:
        type: const
        value: " issues"
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: hg1o3h4x
    type: element
    parentId: wb1p3h6g
    parentProp: children
    parentIndex: a0
  xu1r3hzj:
    name: zendeskFirstReply
    attributes:
      title:
        type: const
        value: zendeskFirstReply
    id: xu1r3hzj
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a9
  h71gdad:
    name: bundleSizes
    attributes:
      title:
        type: const
        value: Bundle size comparison
      parameters:
        type: const
        value:
          - - baseRef
            - master
          - - baseCommit
            - 66e13f6e354e2e4e174462c1f839c9bceb772b8b
          - - circleCIBuildNumber
            - "487681"
    id: h71gdad
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a0
  dk03lv4:
    attributes:
      query:
        type: const
        value:
          function: getBundleSizes
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: bundleSizes
    id: dk03lv4
    type: query
    parentId: h71gdad
    parentProp: queries
    parentIndex: a0
    params:
      - - baseRef
        - type: jsExpression
          value: |
            page.parameters.baseRef
      - - baseCommit
        - type: jsExpression
          value: |
            page.parameters.baseCommit
      - - circleCIBuildNumber
        - type: jsExpression
          value: |
            page.parameters.circleCIBuildNumber
  3d43lvk:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 3d43lvk
    type: element
    parentId: h71gdad
    parentProp: children
    parentIndex: a0
  sl33lb6:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: |
          bundleSizes.data
      columns:
        type: const
        value:
          - field: name
            type: string
            headerName: Bundle
            width: 334
          - field: absoluteDiff.parsed
            type: codeComponent
            codeComponent: Diff
            headerName: Size change
            align: right
          - field: relativeDiff.parsed
            type: codeComponent
            codeComponent: Percent
            width: 111
            headerName: Size %
            align: right
          - field: current.parsed
            type: number
            headerName: Size
            numberFormat:
              kind: preset
              preset: bytes
          - field: absoluteDiff.gzip
            type: codeComponent
            headerName: Gzip change
            codeComponent: Diff
            align: right
          - field: relativeDiff.gzip
            type: codeComponent
            codeComponent: Percent
            headerName: Gzip %
            align: right
          - field: current.gzip
            type: number
            numberFormat:
              kind: preset
              preset: bytes
            headerName: Gzip
      height:
        type: const
        value: 534
      density:
        type: const
        value: standard
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: sl33lb6
    type: element
    parentId: 3d43lvk
    parentProp: children
    parentIndex: a0
  r413myq:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: r413myq
    type: element
    parentId: h71gdad
    parentProp: children
    parentIndex: Zz
  aq03mi8:
    name: text
    props:
      value:
        type: const
        value: "# Size comparison"
      variant:
        type: const
        value: h2
      mode:
        type: const
        value: markdown
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: aq03mi8
    type: element
    parentId: r413myq
    parentProp: children
    parentIndex: a0
root: 9q8eshxx
version: 6
