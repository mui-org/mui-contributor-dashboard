nodes:
  9q8eshxx:
    name: Application
    attributes: {}
    id: 9q8eshxx
    type: app
    parentId: null
    parentProp: null
    parentIndex: null
  9r8fshsf:
    name: communityMetrics_core
    attributes:
      title:
        type: const
        value: Page 1
    id: 9r8fshsf
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a0
  3u63h0h:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 3u63h0h
    type: element
    parentId: 9r8fshsf
    parentProp: children
    parentIndex: a0
  kn53hyv:
    name: DataGrid
    props:
      rows:
        type: jsExpression
        value: >
          PRsOpenandReviewedQuery.data.map((item) => ({
            ...item, // use the spread operator to copy existing properties
            ratio: Math.round((item.reviewed * 100) / item.opened) / 100, // add a new property to each object
          }))
      columns:
        type: const
        value:
          - field: event_month
            type: string
            width: 105
          - field: reviewed_by
            type: string
            width: 165
          - field: reviewed
            type: number
            width: 138
          - field: opened
            type: number
            width: 151
          - field: ratio
            type: number
            width: 141
      rowIdField:
        type: const
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: kn53hyv
    type: element
    parentId: 3u63h0h
    parentProp: children
    parentIndex: a0
  bh03hv4:
    attributes:
      query:
        type: const
        value:
          function: PRsOpenandReviewedQuery
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: PRsOpenandReviewedQuery
    id: bh03hv4
    type: query
    parentId: 9r8fshsf
    parentProp: queries
    parentIndex: a2
  6633hyv:
    name: PageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 6633hyv
    type: element
    parentId: 9r8fshsf
    parentProp: children
    parentIndex: a2
  0823hac:
    name: codeComponent_Chart
    props:
      data:
        type: jsExpression
        value: |
          PRsOpenandReviewedQuery.data
    attributes:
      component:
        type: const
        value: codeComponent.Chart
    layout: {}
    id: 0823hac
    type: element
    parentId: 6633hyv
    parentProp: children
    parentIndex: a0
  lo33hck:
    name: headCISuccessRate
    attributes:
      title:
        type: const
        value: Page2
      parameters:
        type: const
        value:
          - - repository
            - mui-x
      display:
        type: const
        value: standalone
    id: lo33hck
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a1
  og53hlk:
    attributes:
      query:
        type: const
        value:
          function: queryCommitStatuses
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: queryCommitStatuses
    id: og53hlk
    type: query
    parentId: lo33hck
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  jqf3hsr:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: jqf3hsr
    type: element
    parentId: lo33hck
    parentProp: children
    parentIndex: a0
  uqe3h5c:
    name: codeComponent_HealthBadge
    props:
      warning:
        type: const
        value: 75
      problem:
        type: const
        value: 50
      value:
        type: jsExpression
        value: >
          Math.round(
            (queryCommitStatuses.data.repository.defaultBranchRef.target.history.nodes.filter(
              (commit) =>
                commit.status &&
                (commit.status.state === "SUCCESS" || commit.status.state === "PENDING")
            ).length /
              queryCommitStatuses.data.repository.defaultBranchRef.target.history.nodes
                .length) *
              100
          )
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: uqe3h5c
    type: element
    parentId: jqf3hsr
    parentProp: children
    parentIndex: a0
  sgp3hzb:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: sgp3hzb
    type: element
    parentId: lo33hck
    parentProp: children
    parentIndex: a1
  9uo3hez:
    name: Text
    props:
      value:
        type: jsExpression
        value: >
          `Based on the last 7 days
          (${queryCommitStatuses.data.repository.defaultBranchRef.target.history.nodes.length}
          commits)`
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 9uo3hez
    type: element
    parentId: sgp3hzb
    parentProp: children
    parentIndex: a0
  8n03iat:
    name: overdueRatio
    attributes:
      title:
        type: const
        value: overdueRatio
      display:
        type: const
        value: standalone
    id: 8n03iat
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a2
  1t13irl:
    attributes:
      query:
        type: const
        value:
          function: getRatio
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: getRatio
    id: 1t13irl
    type: query
    parentId: 8n03iat
    parentProp: queries
    parentIndex: a0
  e333iuo:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: e333iuo
    type: element
    parentId: 8n03iat
    parentProp: children
    parentIndex: a0
  y623ild:
    name: codeComponent_HealthBadge
    props:
      warning:
        type: const
        value: 10
      problem:
        type: const
        value: 15
      lowerIsBetter:
        type: const
        value: true
      value:
        type: jsExpression
        value: |
          Math.round(getRatio.data.ratio * 10000) / 100
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: y623ild
    type: element
    parentId: e333iuo
    parentProp: children
    parentIndex: a0
  jb63icx:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: jb63icx
    type: element
    parentId: 8n03iat
    parentProp: children
    parentIndex: a1
  rg53iur:
    name: Text
    props:
      value:
        type: const
        value: Based on last 30 days invoices
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: rg53iur
    type: element
    parentId: jb63icx
    parentProp: children
    parentIndex: a0
  fn03hvq:
    name: cICompletionTime
    attributes:
      title:
        type: const
        value: cICompletionTime
      parameters:
        type: const
        value:
          - - repository
            - mui-x
      display:
        type: const
        value: standalone
    id: fn03hvq
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a3
  ii53hyb:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: jsExpression
            value: >
              `https://circleci.com/api/v2/insights/github/mui/${parameters.repository}/workflows/pipeline/summary?analytics-segmentation=web-ui-insights&reporting-window=last-7-days&workflow-name=pipeline`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: queryInsights
    id: ii53hyb
    type: query
    parentId: fn03hvq
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  3x93hxi:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 3x93hxi
    type: element
    parentId: fn03hvq
    parentProp: children
    parentIndex: a0
  ey83hg3:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: >
          Math.round((queryInsights.data.metrics.duration_metrics.median / 60) *
          100) /
            100
      warning:
        type: const
        value: 15
      problem:
        type: const
        value: 20
      unit:
        type: const
        value: minutes
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: ey83hg3
    type: element
    parentId: 3x93hxi
    parentProp: children
    parentIndex: a0
  a3b3h3f:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: a3b3h3f
    type: element
    parentId: fn03hvq
    parentProp: children
    parentIndex: a1
  taa3hus:
    name: Text
    props:
      value:
        type: jsExpression
        value: >
          `Based on the last 7 days (${queryInsights.data.metrics.total_runs}
          runs)`
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: taa3hus
    type: element
    parentId: a3b3h3f
    parentProp: children
    parentIndex: a0
  bse3h9c:
    name: missingGitHubLabel
    attributes:
      title:
        type: const
        value: page
      display:
        type: const
        value: standalone
    id: bse3h9c
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a4
  38f3h2q:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/search/issues
          searchParams:
            - - q
              - type: const
                value: no:label is:open org:mui
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: queryNoLabels
    id: 38f3h2q
    type: query
    parentId: bse3h9c
    parentProp: queries
    parentIndex: a0
  srh3hct:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: srh3hct
    type: element
    parentId: bse3h9c
    parentProp: children
    parentIndex: a0
  9lg3htp:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: |
          queryNoLabels.data.items.length
      warning:
        type: const
        value: 10
      problem:
        type: const
        value: 20
      unit:
        type: const
        value: " issues or PRs"
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: 9lg3htp
    type: element
    parentId: srh3hct
    parentProp: children
    parentIndex: a0
  39j3h6b:
    name: openPRs
    attributes:
      title:
        type: const
        value: openPRs
      parameters:
        type: const
        value:
          - - repository
            - material-ui
      display:
        type: const
        value: standalone
    id: 39j3h6b
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a5
  dlm3hqd:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/search/issues
          searchParams:
            - - q
              - type: jsExpression
                value: >
                  `is:pull-request is:open -is:draft repo:mui/${parameters.repository}`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: openPRs
    id: dlm3hqd
    type: query
    parentId: 39j3h6b
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  fyq3hur:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: fyq3hur
    type: element
    parentId: 39j3h6b
    parentProp: children
    parentIndex: a0
  xup3hw6:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: |
          openPRs.data.total_count
      unit:
        type: const
        value: " open PRs"
      warning:
        type: const
        value: 50
      problem:
        type: const
        value: 75
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: xup3hw6
    type: element
    parentId: fyq3hur
    parentProp: children
    parentIndex: a0
  9ou3hb2:
    name: medianTimeToCompletion
    attributes:
      title:
        type: const
        value: page
      parameters:
        type: const
        value:
          - - repoId
            - "23083156"
      display:
        type: const
        value: standalone
    id: 9ou3hb2
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a6
  4jx3hv9:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: jsExpression
            value: >
              `https://api.ossinsight.io/q/analyze-pull-request-open-to-merged?repoId=${parameters.repoId}`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: pullRequestOpenToMerged
    id: 4jx3hv9
    type: query
    parentId: 9ou3hb2
    parentProp: queries
    parentIndex: a0
    params:
      - - repoId
        - type: jsExpression
          value: |
            page.parameters.repoId
  e8113hoz:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: e8113hoz
    type: element
    parentId: 9ou3hb2
    parentProp: children
    parentIndex: a0
  xv103hin:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: >
          (() => {
            const length = pullRequestOpenToMerged.data.data.length

            return (
              Math.round((pullRequestOpenToMerged.data.data[length - 1].p75 / 24) * 100) /
              100
            )
          })()
      warning:
        type: const
        value: 3
      problem:
        type: const
        value: 5
      unit:
        type: const
        value: days
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: xv103hin
    type: element
    parentId: e8113hoz
    parentProp: children
    parentIndex: a0
  fx133hja:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: fx133hja
    type: element
    parentId: 9ou3hb2
    parentProp: children
    parentIndex: a1
  34123hhe:
    name: Text
    props:
      value:
        type: jsExpression
        value: |
          (() => {
            const length = pullRequestOpenToMerged.data.data.length

            return `Based on the last 30 days (${
              pullRequestOpenToMerged.data.data[length - 1].event_month
            })`
          })()
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 34123hhe
    type: element
    parentId: fx133hja
    parentProp: children
    parentIndex: a0
  fo163htb:
    name: issueFirstComment
    attributes:
      title:
        type: const
        value: issueFirstComment
      parameters:
        type: const
        value:
          - - repoId
            - "23083156"
      display:
        type: const
        value: standalone
    id: fo163htb
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a7
  u3173h6i:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: jsExpression
            value: >
              `https://api.ossinsight.io/q/analyze-issue-open-to-first-responded?repoId=${parameters.repoId}`
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: issueOpenToFirstResponded
    id: u3173h6i
    type: query
    parentId: fo163htb
    parentProp: queries
    parentIndex: a0
    params:
      - - repoId
        - type: jsExpression
          value: |
            page.parameters.repoId
  031b3h1p:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 031b3h1p
    type: element
    parentId: fo163htb
    parentProp: children
    parentIndex: a0
  pr1a3h46:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: >
          (() => {
            const length = issueOpenToFirstResponded.data.data.length

            return Math.round(issueOpenToFirstResponded.data.data[length - 1].p75)
          })()
      warning:
        type: const
        value: 8
      problem:
        type: const
        value: 24
      unit:
        type: const
        value: " hours"
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: pr1a3h46
    type: element
    parentId: 031b3h1p
    parentProp: children
    parentIndex: a0
  h01d3hsd:
    name: PageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: h01d3hsd
    type: element
    parentId: fo163htb
    parentProp: children
    parentIndex: a1
  6y1c3h9v:
    name: Text
    props:
      value:
        type: jsExpression
        value: |
          (() => {
            const length = issueOpenToFirstResponded.data.data.length

            return `Based on the last 30 days (since ${
              issueOpenToFirstResponded.data.data[length - 1].event_month
            })`
          })()
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 6y1c3h9v
    type: element
    parentId: h01d3hsd
    parentProp: children
    parentIndex: a0
  hj1i3hqe:
    name: needTriage
    attributes:
      title:
        type: const
        value: needTriage
      parameters:
        type: const
        value:
          - - repository
            - material-ui
      display:
        type: const
        value: standalone
    id: hj1i3hqe
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a8
  p91j3h86:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/search/issues
          searchParams:
            - - q
              - type: jsExpression
                value: >
                  `is:issue repo:mui/${parameters.repository} label:"status: needs triage"
                  `
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: needTriage
    id: p91j3h86
    type: query
    parentId: hj1i3hqe
    parentProp: queries
    parentIndex: a0
    params:
      - - repository
        - type: jsExpression
          value: |
            page.parameters.repository
  wb1p3h6g:
    name: PageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: wb1p3h6g
    type: element
    parentId: hj1i3hqe
    parentProp: children
    parentIndex: a0
  hg1o3h4x:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: |
          needTriage.data.total_count
      warning:
        type: const
        value: 25
      problem:
        type: const
        value: 50
      unit:
        type: const
        value: " issues"
      lowerIsBetter:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout: {}
    id: hg1o3h4x
    type: element
    parentId: wb1p3h6g
    parentProp: children
    parentIndex: a0
  xu1r3hzj:
    name: WIP_zendeskSatisfactionScore
    attributes:
      title:
        type: const
        value: zendeskFirstReply
    id: xu1r3hzj
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a9
  h71gdad:
    name: bundleSizes
    attributes:
      title:
        type: const
        value: Bundle size comparison
      parameters:
        type: const
        value:
          - - baseRef
            - master
          - - baseCommit
            - 66e13f6e354e2e4e174462c1f839c9bceb772b8b
          - - circleCIBuildNumber
            - "487681"
    id: h71gdad
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: a0
  dk03lv4:
    attributes:
      query:
        type: const
        value:
          function: getBundleSizes
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: bundleSizes
    id: dk03lv4
    type: query
    parentId: h71gdad
    parentProp: queries
    parentIndex: a0
    params:
      - - baseRef
        - type: jsExpression
          value: |
            page.parameters.baseRef
      - - baseCommit
        - type: jsExpression
          value: |
            page.parameters.baseCommit
      - - circleCIBuildNumber
        - type: jsExpression
          value: |
            page.parameters.circleCIBuildNumber
  3d43lvk:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 3d43lvk
    type: element
    parentId: h71gdad
    parentProp: children
    parentIndex: a0
  sl33lb6:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: |
          bundleSizes.data
      columns:
        type: const
        value:
          - field: name
            type: string
            headerName: Bundle
            width: 334
          - field: absoluteDiff.parsed
            type: codeComponent
            codeComponent: Diff
            headerName: Size change
            align: right
          - field: relativeDiff.parsed
            type: codeComponent
            codeComponent: Percent
            width: 111
            headerName: Size %
            align: right
          - field: current.parsed
            type: number
            headerName: Size
            numberFormat:
              kind: preset
              preset: bytes
          - field: absoluteDiff.gzip
            type: codeComponent
            headerName: Gzip change
            codeComponent: Diff
            align: right
          - field: relativeDiff.gzip
            type: codeComponent
            codeComponent: Percent
            headerName: Gzip %
            align: right
          - field: current.gzip
            type: number
            numberFormat:
              kind: preset
              preset: bytes
            headerName: Gzip
      height:
        type: const
        value: 534
      density:
        type: const
        value: standard
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: sl33lb6
    type: element
    parentId: 3d43lvk
    parentProp: children
    parentIndex: a0
  r413myq:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: r413myq
    type: element
    parentId: h71gdad
    parentProp: children
    parentIndex: Zz
  aq03mi8:
    name: text
    props:
      value:
        type: const
        value: "# Size comparison"
      variant:
        type: const
        value: h2
      mode:
        type: const
        value: markdown
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: aq03mi8
    type: element
    parentId: r413myq
    parentProp: children
    parentIndex: a0
  hr03hdi:
    name: WIP_zendeskFirstReply
    attributes:
      title:
        type: const
        value: zendeskSatisfactionScore
    id: hr03hdi
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aA
  y923hoo:
    name: issueWithoutProductScope
    attributes:
      title:
        type: const
        value: issueWithoutProductScope
    id: y923hoo
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aC
  xj43hyd:
    name: labelActivity
    attributes:
      title:
        type: const
        value: labelActivity
    id: xj43hyd
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aE
  hl63hwf:
    name: needtriageNotAssigned
    attributes:
      title:
        type: const
        value: needtriageNotAssigned
    id: hl63hwf
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aG
  2413lvx:
    id: 2413lvx
    name: closedVsOpenedIssues2
    type: page
    parentId: 9q8eshxx
    attributes:
      title:
        type: const
        value: medianTimeToCompletion
      parameters:
        type: const
        value:
          - - repoId
            - "23083156"
      display:
        type: const
        value: shell
    parentProp: pages
    parentIndex: aJ
  2423l17:
    id: 2423l17
    name: issuesOpenedVsClosedRatio
    type: query
    params:
      - - repoId
        - type: jsExpression
          value: |
            page.parameters.repoId
    parentId: 2413lvx
    attributes:
      query:
        type: const
        value:
          url:
            type: jsExpression
            value: >
              `https://api.ossinsight.io/q/analyze-issue-opened-and-closed?repoId=${parameters.repoId}`
          method: GET
          headers: []
      dataSource:
        type: const
        value: rest
      connectionId:
        type: const
        value: null
    parentProp: queries
    parentIndex: a0
  2533lph:
    id: 2533lph
    name: pageRow
    type: element
    props: {}
    layout: {}
    parentId: 2413lvx
    attributes:
      component:
        type: const
        value: PageRow
    parentProp: children
    parentIndex: a0
  2543lm3:
    id: 2543lm3
    name: codeComponent_HealthBadge
    type: element
    props:
      unit:
        type: const
        value: ratio
      value:
        type: jsExpression
        value: |
          (() => {
            const timeSpanInMonths = 3
            let totalOpened = 0
            let totalClosed = 0

            for (let i = 0; i < timeSpanInMonths; i++) {
              totalClosed = +issuesOpenedVsClosedRatio.data.data[i].closed
              totalOpened = +issuesOpenedVsClosedRatio.data.data[i].opened
            }

            return (totalOpened / totalClosed).toFixed(2)
          })()
      problem:
        type: const
        value: 2
      warning:
        type: const
        value: 1
      lowerIsBetter:
        type: const
        value: true
    layout: {}
    parentId: 2533lph
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    parentProp: children
    parentIndex: a0
  2553lyp:
    id: 2553lyp
    name: pageRow1
    type: element
    props: {}
    layout: {}
    parentId: 2413lvx
    attributes:
      component:
        type: const
        value: PageRow
    parentProp: children
    parentIndex: a1
  2563lbg:
    id: 2563lbg
    name: text
    type: element
    props:
      value:
        type: jsExpression
        value: |
          (() => {
            return "Based on the last 3 months"
          })()
    layout: {}
    parentId: 2553lyp
    attributes:
      component:
        type: const
        value: Text
    parentProp: children
    parentIndex: a0
  m023hp4:
    name: npmVersion
    attributes:
      title:
        type: const
        value: npmVersion
      display:
        type: const
        value: shell
      parameters:
        type: const
        value:
          - - package
            - react-dom
    id: m023hp4
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aK
  n663hf8:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: n663hf8
    type: element
    parentId: m023hp4
    parentProp: children
    parentIndex: a0
  ax53h8a:
    name: text
    props:
      mode:
        type: const
        value: markdown
      value:
        type: const
        value: >-
          ## Downloads in the last 7 days


          Same data as in https://www.npmjs.com/package/react-dom?activeTab=versions.
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: ax53h8a
    type: element
    parentId: n663hf8
    parentProp: children
    parentIndex: a0
  w3a3h2f:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: w3a3h2f
    type: element
    parentId: m023hp4
    parentProp: children
    parentIndex: a1
  m293ht1:
    name: textField
    props:
      label:
        type: const
        value: Package
      defaultValue:
        type: jsExpression
        value: |
          page.parameters.package
    attributes:
      component:
        type: const
        value: TextField
    layout: {}
    id: m293ht1
    type: element
    parentId: w3a3h2f
    parentProp: children
    parentIndex: a0
  2we3hq9:
    name: pageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 2we3hq9
    type: element
    parentId: m023hp4
    parentProp: children
    parentIndex: a2
  tsd3hgn:
    name: codeComponent_pieChart
    props:
      data:
        type: jsExpression
        value: |
          Object.entries(
            Object.entries(downloadsVersions.data.downloads)
              .filter(([version]) => version.indexOf("0.0") !== 0)
              .map((entry) => {
                const groups = entry[0].split(".")
                let group = `v${groups[0]}`

                if (group === "v16" && parseInt(groups[1]) >= 8) {
                  group = "v16.8"
                }

                return {
                  version: entry[0],
                  downloads: entry[1],
                  group,
                }
              })
              .reduce((acc, item) => {
                acc[item.group] |= 0
                acc[item.group] += item.downloads
                return acc
              }, {})
          ).map((group) => ({ name: group[0], value: group[1] }))
    attributes:
      component:
        type: const
        value: codeComponent.pieChart
    layout: {}
    id: tsd3hgn
    type: element
    parentId: 2we3hq9
    parentProp: children
    parentIndex: a0
  wrf3h26:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: jsExpression
            value: |
              `https://api.npmjs.org/versions/${encodeURIComponent(
                parameters.package
              )}/last-week`
          transformEnabled: false
          transform: return data;
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: downloadsVersions
    id: wrf3h26
    type: query
    parentId: m023hp4
    parentProp: queries
    parentIndex: a0
    params:
      - - package
        - type: jsExpression
          value: |
            textField.value
  pr63h8i:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: pr63h8i
    type: element
    parentId: xj43hyd
    parentProp: children
    parentIndex: a0
  9753hll:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: |
          queryMaterialUILabels.rows
            .filter((issue) => {
              return issue.timelineItems.some(
                (event) => event.actor === gitHubSlug.defaultValue
              )
            })
            .map((issue) => ({
              ...issue,
              timelineItems: issue.timelineItems.map((event) => event.label),
            }))
      columns:
        type: const
        value:
          - field: title
            type: string
            width: 279
          - field: url
            type: link
            width: 197
          - field: timelineItems
            type: json
            width: 263
      height:
        type: const
        value: 480
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: 9753hll
    type: element
    parentId: pr63h8i
    parentProp: children
    parentIndex: a0
  9483h3c:
    attributes:
      query:
        type: const
        value:
          function: queryMaterialUILabels
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: queryMaterialUILabels
    id: 9483h3c
    type: query
    parentId: xj43hyd
    parentProp: queries
    parentIndex: a0
  ffd3hys:
    attributes:
      query:
        type: const
        value:
          function: queryMUIXLabels
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: queryMUIXLabels
    id: ffd3hys
    type: query
    parentId: xj43hyd
    parentProp: queries
    parentIndex: a1
  a6f3h9a:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/repos/mui/material-ui/issues
          searchParams:
            - - labels
              - type: const
                value: "status: needs triage"
            - - per_page
              - type: const
                value: "100"
            - - state
              - type: const
                value: all
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: materialUI
    id: a6f3h9a
    type: query
    parentId: y923hoo
    parentProp: queries
    parentIndex: a0
  3eg3h4p:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/repos/mui/mui-x/issues
          searchParams:
            - - labels
              - type: const
                value: "status: needs triage"
            - - per_page
              - type: const
                value: "100"
            - - state
              - type: const
                value: all
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: muix
    id: 3eg3h4p
    type: query
    parentId: y923hoo
    parentProp: queries
    parentIndex: a1
  neh3hm5:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/repos/mui/mui-design-kits/issues
          searchParams:
            - - labels
              - type: const
                value: "status: needs triage"
            - - per_page
              - type: const
                value: "100"
            - - state
              - type: const
                value: all
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: muiDesignKits
    id: neh3hm5
    type: query
    parentId: y923hoo
    parentProp: queries
    parentIndex: a2
  8lj3h3c:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 8lj3h3c
    type: element
    parentId: y923hoo
    parentProp: children
    parentIndex: a0
  vxi3hsd:
    name: text
    props:
      value:
        type: const
        value: Issues without product scope label
      variant:
        type: const
        value: h5
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: vxi3hsd
    type: element
    parentId: 8lj3h3c
    parentProp: children
    parentIndex: a0
  tkl3han:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: tkl3han
    type: element
    parentId: y923hoo
    parentProp: children
    parentIndex: a1
  44k3h4h:
    name: text1
    props:
      mode:
        type: const
        value: markdown
      value:
        type: const
        value: "This page is used for:
          https://www.notion.so/mui-org/GitHub-community-issues-PRs-12a84fdf50e\
          44595afc55343dac00fca#d6680f5abf8b4e3ab132cb8e336bb5bc"
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 44k3h4h
    type: element
    parentId: tkl3han
    parentProp: children
    parentIndex: a0
  qbn3hjx:
    name: pageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: qbn3hjx
    type: element
    parentId: y923hoo
    parentProp: children
    parentIndex: a2
  bsm3hvs:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: |
          (() => {
            const nonProductScopeLabels = [
              "support: commercial",
              "support: docs-feedback",
            ]

            return materialUI.rows
              .concat(muix.rows)
              .concat(muiDesignKits.rows)
              .filter((issue) => {
                const withoutNonProductScopeLabels = issue.labels.filter(
                  (label) => !nonProductScopeLabels.includes(label.name)
                )
                return withoutNonProductScopeLabels.length === 1
              })
              .sort((issueA, issueB) => {
                if (issueA.state === "open") {
                  return 1
                }
                if (issueB.state === "open") {
                  return 1
                }
                return issueB.number - issueA.number
              })
          })()
      columns:
        type: const
        value:
          - field: number
            type: number
          - field: state
            type: string
          - field: title
            type: string
            width: 272
          - field: html_url
            type: link
            width: 310
      height:
        type: const
        value: 396
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: bsm3hvs
    type: element
    parentId: qbn3hjx
    parentProp: children
    parentIndex: a0
  wms3hgs:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers:
            - - Bearer
              - type: const
                value: abc
          browser: false
          url:
            type: const
            value: https://api.github.com/search/issues
          searchParams:
            - - q
              - type: const
                value: 'repo:mui/material-ui repo:mui/mui-x is:open is:issue label:"status:
                  needs triage" no:assignee'
          transformEnabled: true
          transform: |+
            return data.items

      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: noAssignee
    id: wms3hgs
    type: query
    parentId: hl63hwf
    parentProp: queries
    parentIndex: a0
  7ju3hr6:
    name: closedIssuesNoNeedtriage
    attributes:
      title:
        type: const
        value: issueWithoutProductScope
    id: 7ju3hr6
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aL
  7kv3hfv:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/repos/mui/material-ui/issues
          searchParams:
            - - labels
              - type: const
                value: "status: needs triage"
            - - per_page
              - type: const
                value: "100"
            - - state
              - type: const
                value: closed
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: materialUI
    id: 7kv3hfv
    type: query
    parentId: 7ju3hr6
    parentProp: queries
    parentIndex: a0
  7lw3hed:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/repos/mui/mui-x/issues
          searchParams:
            - - labels
              - type: const
                value: "status: needs triage"
            - - per_page
              - type: const
                value: "100"
            - - state
              - type: const
                value: closed
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: muix
    id: 7lw3hed
    type: query
    parentId: 7ju3hr6
    parentProp: queries
    parentIndex: a1
  7lx3hze:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers: []
          browser: false
          url:
            type: const
            value: https://api.github.com/repos/mui/mui-design-kits/issues
          searchParams:
            - - labels
              - type: const
                value: "status: needs triage"
            - - per_page
              - type: const
                value: "100"
            - - state
              - type: const
                value: closed
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: muiDesignKits
    id: 7lx3hze
    type: query
    parentId: 7ju3hr6
    parentProp: queries
    parentIndex: a2
  7ly3hvu:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 7ly3hvu
    type: element
    parentId: 7ju3hr6
    parentProp: children
    parentIndex: a0
  7lz3hvr:
    name: text
    props:
      value:
        type: const
        value: Issues without product scope label
      variant:
        type: const
        value: h5
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 7lz3hvr
    type: element
    parentId: 7ly3hvu
    parentProp: children
    parentIndex: a0
  7l103hz4:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 7l103hz4
    type: element
    parentId: 7ju3hr6
    parentProp: children
    parentIndex: a1
  7l113hsm:
    name: text1
    props:
      mode:
        type: const
        value: markdown
      value:
        type: const
        value: "texThis page is used for:
          https://www.notion.so/mui-org/GitHub-community-issues-PRs-12a84fdf50e\
          44595afc55343dac00fca#d6680f5abf8b4e3ab132cb8e336bb5bc"
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 7l113hsm
    type: element
    parentId: 7l103hz4
    parentProp: children
    parentIndex: a0
  7l123hyw:
    name: pageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 7l123hyw
    type: element
    parentId: 7ju3hr6
    parentProp: children
    parentIndex: a2
  7l133hf5:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: |
          materialUI.rows
            .concat(muix.rows)
            .concat(muiDesignKits.rows)
            .sort((issueA, issueB) => {
              if (issueA.state === "open") {
                return 1
              }
              if (issueB.state === "open") {
                return 1
              }
              return issueB.number - issueA.number
            })
      columns:
        type: const
        value:
          - field: number
            type: number
          - field: state
            type: string
          - field: title
            type: string
            width: 272
          - field: html_url
            type: link
            width: 310
      height:
        type: const
        value: 396
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: 7l133hf5
    type: element
    parentId: 7l123hyw
    parentProp: children
    parentIndex: a0
  w2163h8t:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: w2163h8t
    type: element
    parentId: xj43hyd
    parentProp: children
    parentIndex: Zz
  6o153h7f:
    name: text
    props:
      value:
        type: const
        value: "Filter for GitHub slub:"
    attributes:
      component:
        type: const
        value: Text
    layout:
      columnSize:
        type: const
        value: 0.6565656565656566
    id: 6o153h7f
    type: element
    parentId: w2163h8t
    parentProp: children
    parentIndex: a0V
  sp173h0h:
    name: gitHubSlug
    props:
      label:
        type: const
        value: GitHub slug
      defaultValue:
        type: const
        value: gzrae
      fullWidth:
        type: const
        value: true
    attributes:
      component:
        type: const
        value: TextField
    layout:
      columnSize:
        type: const
        value: 1.3434343434343434
    id: sp173h0h
    type: element
    parentId: w2163h8t
    parentProp: children
    parentIndex: a1
  kh183hlc:
    name: text1
    props:
      mode:
        type: const
        value: markdown
      value:
        type: const
        value: "Build for:
          https://www.notion.so/mui-org/GitHub-community-issues-PRs-Tier-1-12a8\
          4fdf50e44595afc55343dac00fca#0711365e6f2343bfbbb0c9c78bb2bc8d"
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: kh183hlc
    type: element
    parentId: vu1a3hgd
    parentProp: children
    parentIndex: a0
  vu1a3hgd:
    name: pageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: vu1a3hgd
    type: element
    parentId: xj43hyd
    parentProp: children
    parentIndex: ZzV
  om1d3h8o:
    name: pageRow3
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: om1d3h8o
    type: element
    parentId: xj43hyd
    parentProp: children
    parentIndex: Zzl
  5p1c3hco:
    name: text2
    props:
      value:
        type: const
        value: Material UI
      variant:
        type: const
        value: h6
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 5p1c3hco
    type: element
    parentId: om1d3h8o
    parentProp: children
    parentIndex: a0
  4k1e3hal:
    name: dataGrid1
    props:
      rows:
        type: jsExpression
        value: >
          queryMUIXLabels.rows
            .filter((issue) => {
              return issue.timelineItems.some((event) => event.actor === gitHubSlug.value)
            })
            .map((issue) => ({
              ...issue,
              timelineItems: issue.timelineItems.map((event) => event.label),
            }))
      columns:
        type: const
        value:
          - field: title
            type: string
            width: 279
          - field: url
            type: link
            width: 184
          - field: timelineItems
            type: json
            width: 263
      height:
        type: const
        value: 480
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: 4k1e3hal
    type: element
    parentId: o11f3hct
    parentProp: children
    parentIndex: a0
  o11f3hct:
    name: pageRow4
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: o11f3hct
    type: element
    parentId: xj43hyd
    parentProp: children
    parentIndex: a1
  v41g3hnr:
    name: text3
    props:
      value:
        type: const
        value: MUI X
      variant:
        type: const
        value: h6
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: v41g3hnr
    type: element
    parentId: 151h3hrj
    parentProp: children
    parentIndex: a0
  151h3hrj:
    name: pageRow5
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 151h3hrj
    type: element
    parentId: xj43hyd
    parentProp: children
    parentIndex: a0V
  d11m3hiz:
    attributes:
      query:
        type: const
        value:
          method: GET
          headers:
            - - Authorization
              - type: const
                value: Basic abc
          browser: false
          url:
            type: const
            value: https://mui.zendesk.com/api/v2/satisfaction_ratings
          searchParams:
            - - start_time
              - type: jsExpression
                value: >
                  (() => {
                    const days = 7 * 3
                    return Math.round(new Date().getTime() / 1000) - 3600 * 24 * days
                  })()
            - - score
              - type: const
                value: received
          transformEnabled: true
          transform: >-
            return Object.values(data.satisfaction_ratings.reduce((acc, item) =>
            {
              // only keep the latest
              acc[item.ticket_id] = {
                score: item.score,
              };
              return acc;
            }, {}));
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: rest
    name: satisfactionRating
    id: d11m3hiz
    type: query
    parentId: xu1r3hzj
    parentProp: queries
    parentIndex: a0
  ds1q3hqv:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: ds1q3hqv
    type: element
    parentId: xu1r3hzj
    parentProp: children
    parentIndex: a0
  y51p3h4n:
    name: codeComponent_HealthBadge
    props:
      value:
        type: jsExpression
        value: >
          Math.round(
            (satisfactionRating.data.filter((rating) => rating.score === "good").length /
              satisfactionRating.data.length) *
              100
          )
    attributes:
      component:
        type: const
        value: codeComponent.HealthBadge
    layout:
      columnSize:
        type: const
        value: 1
    id: y51p3h4n
    type: element
    parentId: ds1q3hqv
    parentProp: children
    parentIndex: a0
  tn213hge:
    name: WIP_prWithoutLabels
    attributes:
      title:
        type: const
        value: labelActivity
    id: tn213hge
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aM
  tn223hq9:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: tn223hq9
    type: element
    parentId: tn213hge
    parentProp: children
    parentIndex: a0
  tn233hdz:
    name: text
    props:
      value:
        type: const
        value: PRs without labels
      variant:
        type: const
        value: h5
    attributes:
      component:
        type: const
        value: Text
    layout:
      columnSize:
        type: const
        value: 0.6565656565656566
    id: tn233hdz
    type: element
    parentId: tn223hq9
    parentProp: children
    parentIndex: a0
  ts253hxz:
    name: pageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: ts253hxz
    type: element
    parentId: tn213hge
    parentProp: children
    parentIndex: a1
  ts263h16:
    name: text1
    props:
      mode:
        type: const
        value: markdown
      value:
        type: const
        value: "This page is used for:
          https://www.notion.so/mui-org/GitHub-community-issues-PRs-Tier-1-12a8\
          4fdf50e44595afc55343dac00fca#d97e5e8b4f394dec95de36668dbf81d2"
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: ts263h16
    type: element
    parentId: ts253hxz
    parentProp: children
    parentIndex: a0
  ts293hy8:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: ts293hy8
    type: element
    parentId: tn213hge
    parentProp: children
    parentIndex: a3
  ts2a3h8t:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: >
          (() => {
            const filterOutLabels = ["PR: out-of-date", "PR: needs revision"]

            return queryPRs.data
              .filter((pr) => !pr.isDraft)
              .filter(
                (pr) =>
                  pr.labels.nodes.filter((label) => !filterOutLabels.includes(label.name))
                    .length === 0
              )
          })()
      columns:
        type: const
        value:
          - field: title
            type: string
            width: 279
          - field: url
            type: link
            width: 352
          - field: timelineItems
            type: json
            width: 263
      height:
        type: const
        value: 480
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: ts2a3h8t
    type: element
    parentId: ts293hy8
    parentProp: children
    parentIndex: a0
  ts2f3h31:
    attributes:
      query:
        type: const
        value:
          function: queryPRs
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: queryPRs
    id: ts2f3h31
    type: query
    parentId: tn213hge
    parentProp: queries
    parentIndex: a0
  ir2o3hxh:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: ir2o3hxh
    type: element
    parentId: hl63hwf
    parentProp: children
    parentIndex: a1
  262n3hy0:
    name: text1
    props:
      value:
        type: const
        value: Open "need triage" issues without assignee
      variant:
        type: const
        value: h5
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 262n3hy0
    type: element
    parentId: ir2o3hxh
    parentProp: children
    parentIndex: a0
  oz2q3h2w:
    name: pageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: oz2q3h2w
    type: element
    parentId: hl63hwf
    parentProp: children
    parentIndex: a2
  ap2p3hhw:
    name: text2
    props:
      mode:
        type: const
        value: markdown
      value:
        type: const
        value: "Built for:
          https://www.notion.so/mui-org/GitHub-community-issues-PRs-Tier-1-12a8\
          4fdf50e44595afc55343dac00fca#8f5ae0daa6ad4543b866f3ad0532c9e4"
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: ap2p3hhw
    type: element
    parentId: oz2q3h2w
    parentProp: children
    parentIndex: a0
  kp2t3h40:
    name: pageRow3
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: kp2t3h40
    type: element
    parentId: hl63hwf
    parentProp: children
    parentIndex: a3
  7x2s3hos:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: >
          noAssignee.data
            .map((data) => ({
              ...data,
              repo: data.repository_url.replace("https://api.github.com/repos/mui/", ""),
            }))
            .sort((a, b) => {
              if (a.repo === "mui-x") {
                return -1
              }

              if (b.repo === "mui-x") {
                return -1
              }
            })
      columns:
        type: const
        value:
          - field: number
            type: number
          - field: repo
            type: string
            width: 71
          - field: title
            type: string
            width: 372
          - field: html_url
            type: link
            width: 203
      height:
        type: const
        value: 452
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: 7x2s3hos
    type: element
    parentId: kp2t3h40
    parentProp: children
    parentIndex: a0
  p1303hrn:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: p1303hrn
    type: element
    parentId: xu1r3hzj
    parentProp: children
    parentIndex: Zz
  0m2z3hxz:
    name: text
    props:
      value:
        type: const
        value: TBD after we make env variables available in bindings
      sx:
        type: const
        value:
          color: red
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 0m2z3hxz
    type: element
    parentId: p1303hrn
    parentProp: children
    parentIndex: a0
  6a333hp9:
    name: pageRow3
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 6a333hp9
    type: element
    parentId: tn213hge
    parentProp: children
    parentIndex: Zz
  7u323hoa:
    name: text2
    props:
      value:
        type: const
        value: HAVING ISSUES WITH TRANSFORMING DATA IN CODE QUERY
      sx:
        type: const
        value:
          color: red
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 7u323hoa
    type: element
    parentId: 6a333hp9
    parentProp: children
    parentIndex: a0
  1t353h04:
    name: WIP_openPrWithoutReviewer
    attributes:
      title:
        type: const
        value: labelActivity
    id: 1t353h04
    type: page
    parentId: 9q8eshxx
    parentProp: pages
    parentIndex: aN
  1t363h8u:
    name: pageRow3
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 1t363h8u
    type: element
    parentId: 1t353h04
    parentProp: children
    parentIndex: a0
  1t373hu0:
    name: text2
    props:
      value:
        type: const
        value: HAVING ISSUES WITH TRANSFORMING DATA IN CODE QUERY
      sx:
        type: const
        value:
          color: red
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 1t373hu0
    type: element
    parentId: 1t363h8u
    parentProp: children
    parentIndex: a0
  1t383hy0:
    name: pageRow1
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 1t383hy0
    type: element
    parentId: 1t353h04
    parentProp: children
    parentIndex: a1
  1t393h8o:
    name: text
    props:
      value:
        type: const
        value: Open PRs without requested reviewer
      variant:
        type: const
        value: h5
    attributes:
      component:
        type: const
        value: Text
    layout:
      columnSize:
        type: const
        value: 0.6565656565656566
    id: 1t393h8o
    type: element
    parentId: 1t383hy0
    parentProp: children
    parentIndex: a0
  1t3a3hhg:
    name: pageRow2
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 1t3a3hhg
    type: element
    parentId: 1t353h04
    parentProp: children
    parentIndex: a2
  1u3b3hk6:
    name: text1
    props:
      mode:
        type: const
        value: markdown
      value:
        type: const
        value: "This page is used for:
          https://www.notion.so/mui-org/GitHub-community-issues-PRs-Tier-1-12a8\
          4fdf50e44595afc55343dac00fca#c6b06804e0ac40c3aa2b5b5c16b202bf"
    attributes:
      component:
        type: const
        value: Text
    layout: {}
    id: 1u3b3hk6
    type: element
    parentId: 1t3a3hhg
    parentProp: children
    parentIndex: a0
  1u3c3hi2:
    name: pageRow
    props: {}
    attributes:
      component:
        type: const
        value: PageRow
    layout: {}
    id: 1u3c3hi2
    type: element
    parentId: 1t353h04
    parentProp: children
    parentIndex: a3
  1u3d3hjm:
    name: dataGrid
    props:
      rows:
        type: jsExpression
        value: >
          (() => {
            const filterOutLabels = ["on hold"]
            const rtf = new Intl.RelativeTimeFormat("en", { style: "narrow" })

            const daysAgo = (a, b) => {
              const difference = a.getTime() - b.getTime()
              return Math.ceil(difference / (1000 * 3600 * 24))
            }

            return queryPRs2.data
              .filter((pr) => !pr.isDraft)
              .filter(
                (pr) =>
                  pr.reviews.nodes.length === 0 && pr.reviewRequests.nodes.length === 0
              )
              .filter(
                (pr) =>
                  pr.labels.nodes.filter((label) => filterOutLabels.includes(label.name))
                    .length === 0
              )
              .map((pr) => ({
                ...pr,
                repository: pr.repository.name,
                daysAgoRaw: daysAgo(new Date(pr.createdAt), new Date()),
                daysAgo: rtf.format(daysAgo(new Date(pr.createdAt), new Date()), "day"),
              }))
              .filter((pr) => !(pr.repository === "mui-x" && pr.daysAgoRaw > -14))
          })()
      columns:
        type: const
        value:
          - field: title
            type: string
            width: 279
          - field: url
            type: link
            width: 352
          - field: timelineItems
            type: json
            width: 263
      height:
        type: const
        value: 480
    attributes:
      component:
        type: const
        value: DataGrid
    layout: {}
    id: 1u3d3hjm
    type: element
    parentId: 1u3c3hi2
    parentProp: children
    parentIndex: a0
  1u3e3he6:
    attributes:
      query:
        type: const
        value:
          function: queryPRs2
      connectionId:
        type: const
        value: null
      dataSource:
        type: const
        value: local
    name: queryPRs2
    id: 1u3e3he6
    type: query
    parentId: 1t353h04
    parentProp: queries
    parentIndex: a0
root: 9q8eshxx
version: 6
